"use strict";window.onload=function(){var myEditor=$(".es5");myEditor.codeblock({editable:true, //initial console text
consoleClass:"codeblock-console-text",runButtonText:"run",runButtonClass:"codeblock-console-run",console:true,resetable:false,runnable:true,lineNumbers:true});example_variables();example_arrows();example_classes();example_objectLiterals();example_templateStrings();example_destructuring();example_default();example_for();example_generators();example_unicode();example_modules();example_maps();example_proxies();example_symbols();example_subclasses();example_promises();example_additions();};function example_variables(){var editor=$('.es5-variables');var editor2=$('.es6-variables');var challenge="var x = 3;\n\nfunction foo() {\n\tvar x = 5;  //Declare local var\n    console.log(x);          \n}\n \nfoo();";var challenge2="function foo() {\n\tif (true) {\n\t    let x = 3;\n\t    const c = 4;\n\t    //c = 5; //error\n\t}\n\t//console.log(x); //error\n  \ttypeof bar;\n  \t//let bar = 'baz'; //error\n}\nfoo();";bindExamples(editor,editor2,challenge,challenge2);}function example_arrows(){var editor=$('.es5-arrows');var editor2=$('.es6-arrows');var challenge="var arr = [4, 9, 16];\n\nvar roots = arr.map(function (x) { \n    return Math.sqrt(x)\n});\n\nconsole.log(roots);";var challenge2="var arr = [4, 9, 16];\n\nconst roots = arr.map(x => Math.sqrt(x));\n\nconsole.log(roots);";bindExamples(editor,editor2,challenge,challenge2);}function example_classes(){var editor=$('.es5-classes');var editor2=$('.es6-classes');var challenge="function someClass(age) {\n    this.age = age;\n}\n\nsomeClass.prototype.sayAge = function() {\n    console.log(this.age);\n}\n\nvar myInstance = new someClass(27);\nmyInstance.sayAge();";var challenge2="class someClass {\n    constructor(age) {\n        this.age = age;\n }\n    sayAge() {\n        console.log(this.age);\n    }\n}\n\nvar myInstance = new someClass(27);\nmyInstance.sayAge();";bindExamples(editor,editor2,challenge,challenge2);}function example_objectLiterals(){var editor=$('.es5-objectLiterals');var editor2=$('.es6-objectLiterals');var challenge="//Method Definition Shorthand\n\nvar o = {\n  method: function() {\n    return \"Hello!\";\n  }\n};\n\n//Property Value Shorthand\n\nfunction f( x, y ) {\n  return { x: x, y: y };\n}";var challenge2="//Method Definition Shorthand\n\nvar o = {\n  method() {\n    return \"Hello!\";\n  }\n};\n\n//Property Value Shorthand\n\nfunction f( x, y ) {\n  return { x, y };\n}";bindExamples(editor,editor2,challenge,challenge2);}function example_templateStrings(){var editor=$('.es5-templateStrings');var editor2=$('.es6-templateStrings');var challenge="var multiline =\n    'hello\\n' +\n    'world\\n';\n    \n//console.log(multiline);\n\nvar a = 5;\nvar b = 10;\nconsole.log(\"hey \" + (a + b) + \" there\");";var challenge2="const multiline = `hello\n    wolrd`;\n    \n//console.log(multiline);\n\nconst a = 5;\nconst b = 10;\n \nconsole.log(`hey ${a + b} there`);\n";bindExamples(editor,editor2,challenge,challenge2);}function example_destructuring(){var editor2=$('.es6-destructing');var challenge2="// object pattern matching\nlet {lName, fName} = {fName: 'John', age: 15, lName: 'Doe'};\n \n// array pattern matching\nlet [first, second, third] = [8, 4, 100, -5, 20];\n \nconsole.log(lName + ', '+ fName);\n// output: Doe, John\n \nconsole.log(third, second, first);\n// output: 100, 4, 8";editor2.codeblock("runnable",false);bindExamples(null,editor2,null,challenge2);}function example_default(){var editor=$('.es5-default');var editor2=$('.es6-default');var challenge="//default\nfunction foo(x, y) {\n    x = x || 0;\n    y = y || 0;\n}\n\n//rest\nfunction containsAll(haystack) {\n  for (var i = 1; i < arguments.length; i++) {\n    var needle = arguments[i];\n    if (haystack.indexOf(needle) === -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\n//spread\nvar arr1 = ['a', 'b'];\nvar arr2 = ['c'];\nvar arr3 = ['d', 'e'];\n\nconsole.log(arr1.concat(arr2, arr3));";var challenge2="//default\nfunction foo(x=0, y=0) {\n   \n}\n\n//rest\nfunction containsAll(haystack, ...needles) {\n  for (let needle of needles) {\n    if (haystack.indexOf(needle) === -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\n//spread\nconst arr1 = ['a', 'b'];\nconst arr2 = ['c'];\nconst arr3 = ['d', 'e'];\n\nconsole.log([...arr1, ...arr2, ...arr3]);";editor2.codeblock("runnable",false);bindExamples(editor,editor2,challenge,challenge2);}function example_for(){var editor=$('.es5-for');var editor2=$('.es6-for');var challenge="//forEeach\nvar list = [8, 3, 11, 9, 6], i;\n \nlist.forEach(function(value, i) {\n  //console.log(value);\n});\n\n//for in\n// Don't do this, order is not guaranteed\nfor (i in list) {\n  console.log(list[i]);\n}";var challenge2="//for of\nlet list = [8, 3, 11, 9, 6];\n \nfor (let value of list) {\n  console.log(value);\n}";bindExamples(editor,editor2,challenge,challenge2);}function example_generators(){var editor2=$('.es6-generators');var challenge2="function *sayHelloWorld() {\n    var first = yield 'first param';\n    var second = yield 'second param';\n    console.log(first + second);\n}\n\nvar myGenerator = sayHelloWorld();\n\nmyGenerator.next();         //{value: 'first param', done: 'false'}\nmyGenerator.next('hello '); //{value: 'second param', done: 'false'}\nmyGenerator.next('world')   //{value: 'undefined', done: 'true'}";bindExamples(null,editor2,null,challenge2);}function example_unicode(){var editor=$('.es5-unicode');var editor2=$('.es6-unicode');var challenge="console.log('\\uD83D\\uDE80');";var challenge2="console.log('\\u{1F680}');\n\nconsole.log('\\u{13021}') //breaks";bindExamples(editor,editor2,challenge,challenge2);}function example_modules(){var editor2=$('.es6-modules');var challenge2="//exporting in ES6\nexport function someMethod() {\n\n}\nexport const another = {};\n\n//All supported syntax\nimport 'jquery';                        // import a module without any import bindings\nimport $ from 'jquery';                 // import the default export of a module\nimport { $ } from 'jquery';             // import a named export of a module\nimport { $ as jQuery } from 'jquery';   // import a named export to a different name\nimport * as crypto from 'crypto';       // import an entire module instance object\n\nexport const x = 42;                    // export a named variable\nexport function foo() {};               // export a named function\nexport default 42;                      // export the default export\nexport default function foo() {};       // export the default export as a function\nexport { encrypt };                     // export an existing variable\nexport { decrypt as dec };              // export a variable as a new name\nexport { encrypt as en } from 'crypto'; // export an export from another module\nexport * from 'crypto';                 // export all exports from another module";editor2.codeblock("runnable",false);bindExamples(null,editor2,null,challenge2);}function example_maps(){var editor2=$('.es6-maps');var challenge2="//Maps\nlet map = new Map();\nmap.set(\"foo\", \"bar\");\nmap.set(\"hello\", \"world\");\nmap.delete(\"hello\");\nconsole.log(map.get(\"foo\"));\nconsole.log(map.size);\nconsole.log(map.length); //wrong - length is for sequences, data structures that are indexable â€“ like arrays\nconsole.log(map.has(\"foo\"));\n\n//WeakMaps\nvar data, wmap = new WeakMap();\nwmap.set({foo: \"bar\"}, \"foobar\");\n\n//Sets\nlet value, set = new Set([\"a\", \"a\",\"e\", \"b\", \"c\", \"b\", \"b\", \"b\", \"d\"]);\n\nfor (value of set) {\n    console.log(value);\n}";bindExamples(null,editor2,null,challenge2);}function example_proxies(){var editor2=$('.es6-proxies');var challenge2="var engineer = { name: 'Joe Sixpack', salary: 50 };\n \nvar interceptor = {\n  set: function (receiver, property, value) {\n    console.log(property, 'is changed to', value);\n    receiver[property] = value;\n  }\n};\n \nengineer = Proxy(engineer, interceptor);\n\nengineer.salary = 60;\n\n//console output:\n//salary is changed to 60";editor2.codeblock("runnable",false);bindExamples(null,editor2,null,challenge2);}function example_symbols(){var editor2=$('.es6-symbols');var challenge2="let sym = Symbol(\"foo\");\nconsole.log(sym.toString());\nlet obj = {};\n\n//const foobar = sym + 'bar';  //error\n\nobj['hi'] = \"bye\";\nobj[sym] = \"bar\";\n//property accessed by sym doesn't show up in the object if iterated on or if stringify'd\nfor (const i in obj) {\n    console.log(i);             \n}\n\nconsole.log(JSON.stringify(obj));";bindExamples(null,editor2,null,challenge2);}function example_subclasses(){var editor2=$('.es6-subclasses');var challenge2="//extend Error\nclass MyError extends Error {\n  constructor(message) {\n    super(message);\n    this.message = message;\n    this.name = 'MyError';\n  }\n}\n\n//extend Array\nclass Stack extends Array {\n    get top() {\n        return this[this.length - 1];\n    }\n}\n\nlet stack = new Stack();\nstack.push('world');\nstack.push('hello');\nconsole.log(stack.top);\nconsole.log(stack.length);";bindExamples(null,editor2,null,challenge2);}function example_promises(){var editor2=$('.es6-promises');var challenge2="// an immediately resolved promise\nvar p2 = Promise.resolve(\"foo\"); \n\n// can get it after the fact, unlike events\np2.then((res) => console.log(res)); \n\nvar p = new Promise(function(resolve, reject) {  \n   setTimeout(() => resolve(4), 2000);\n});\n\n// handler can't change promise, just value\np.then((res) => {  \n  res += 2;  \n  console.log(res);\n});\n\n// still gets 4\np.then((res) => console.log(res));";bindExamples(null,editor2,null,challenge2);}function example_additions(){var editor2=$('.es6-additions');var challenge2="Number.isInteger(Infinity) // false\nNumber.isNaN(\"NaN\") // false\n\nMath.acosh(3) // 1.762747174039086\nMath.hypot(3, 4) // 5\n\n\"abcde\".includes(\"cd\") // true\n\"abc\".repeat(3) // \"abcabcabc\"\n\nArray.from(document.querySelectorAll('*')) // Returns a real Array\nArray.of(1, 2, 3)    // Similar to new Array(...), but without special one-arg behavior\n[0, 0, 0].fill(7, 1) // [0,7,7]\n[1, 2, 3].find(x => x == 3)      // 3\n[1, 2, 3].findIndex(x => x == 2) // 1\n[1, 2, 3, 4, 5].copyWithin(3, 0) // [1, 2, 3, 1, 2]\n[\"a\", \"b\", \"c\"].entries() // iterator [0, \"a\"], [1,\"b\"], [2,\"c\"]\n[\"a\", \"b\", \"c\"].keys()    // iterator 0, 1, 2\n[\"a\", \"b\", \"c\"].values()  // iterator \"a\", \"b\", \"c\"\n\nObject.assign(Point, { origin: new Point(0,0) })";editor2.codeblock("runnable",false);bindExamples(null,editor2,null,challenge2);}function bindExamples(editor,editor2,challenge,challenge2){if(editor!==null){editor.codeblock("text",challenge);editor.codeblock("editor").moveCursorTo(0);}editor2.codeblock("text",challenge2);editor2.codeblock("editor").moveCursorTo(0);}